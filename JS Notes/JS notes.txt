Introduction
What is JavaScript?
    it is scripting language used to intract with the web pages dynamicly.

    it is on 3rd layer
    - HTML - Structure
    - CSS - Styling
    - JS - Logics

    Key concepts
    - dynamiclly update the content
    - Respond to user Events
    - Manipulate the HTML and CSS
    - API Integration

    Features of JS
    - light weight
    - Run on Browser
    - Cross plateform
    - Event driven approach


Evolution of JS
    - ES3: 
    - AJEX: 
    - jQuery:
    - ES5:
    - NodeJS:
    - ES6:
    - Latest F/W: 

Why JS is important?
- 

Online: code pen, replit
Local: on your own pc



------- Class 2 -------
syntax rules
    - case sensetive
    - statement end with ; (optinal but use it a good practice)
    - wihitespace and indentation 
    - curly brackets {} group or block of code

console.log(): is used for debugging commonly used by developers
alert(): quick popup for small notifications
document.write(): old way, not recomended now a days(override the entire page)

document.write() and alert() dont use in production website -> it will provide bad UX


Variable 
    - named containers to store the values

let name = "Yogendra" //store the text
let age = 27 //store the number

old way of Variable

var x = 10;
console.log(x);

var 
    - function scope
    - introduce in early JS
    - can be re-declared and also update
Note: it can caluse bug due to re-declared nature

modern way let
let y = 20;
y=10;

let
    - introduced in ES6
    - Block scope(only visible in {})
    - can be updated but can not be re-declared in same scope


const
    - values can not be changed



var 
    - function scope
    - we can re-assign
    - we can re-declare
    - leguacy code
let 
    - Block Scope {}
    - we can re-assign
    - we can not re-declare
    - changing values
const
    - Block Scope
    - we can not re-assign the values
    - we can not re-declare
    - constant values


------------ class 3 --------
Data types
    it decide or define which type of data you can store in variable.
        - number
        - string
        - Array
        - list
        - objects......

    two types
        - Primitive Data type: immutable | predefined
        - Non Primitive Data type: Mutable | user defined

Primitive Data type: can not be changed but can be replaced
    - Number
    - String
    - Boolean
    - Null
    - Undefined
    - Symbol (ES6)
    - BigInt (ES11/ES2020)

    use number() to conver the data type
    use parseInt(), parseFloat() when converting string

    Note: dont use when the number is big (use BigInt insted)

String: sequence of Characters (Text)
    + is old way
    template literals `${variable}` (Modern)

Note: dont use in Binary/ structured data (use JSON or objects)


Boolean: True / False
    use for:
        - conditions
        - flags


Null: when you want empty values
    - reset or clear the form
    - shoping cart is empty if clear all

Undefined: when no value if declared
    forms fields that are not filld by defalut those are Undefined


BigInt: Number greate then -  Number.MAX_SAFE_INTEGER 
    9007199254740991

    use when you are working with finace app,. cryto app.....

    use when take the values of aadhar card, bank a/c num....

Non Primitive: Objects and collections
    - stored by reference
    - there are mutable in nature

Types:
    - Objects : â€‹instance of class / where data stored in Key - value pair
        - use the dot notations
        - bracket notations

        When to use in project:
            - when adding products
            - user details
            - settings
    
    - Arrays : collection of elements of same type stored in order / ordered collection of elements

    - Functions: reusable code | write Once use many time


Operators: there are the tools to perfom the calculation, add the logic or the business rules to the project.
    - Arithmetic Operators
        operations: +,-,*,/,%,**,++,--
    - comparison Operators: use to compare the values
        operations: <,<=,>,>=,!=,!==,==,
            ===   : strict equal (check value + Type)
    - Logical Operators: 
    - Assignement Operators
    - Ternary Operators
    


